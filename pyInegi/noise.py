import numpy as np
import geopandas as gpd
from shapely.geometry import LineString, Point, Polygon
from scipy.spatial import Voronoi, voronoi_plot_2d

def add_noise(points, noise_level=1e-9):
    noise = np.random.normal(scale=noise_level, size=points.shape)
    return points + noise

# Supongamos que 'puntos' es tu array de puntos
puntos = np.array([[1987681.6413000003,1344597.434799999],[1987681.6413000003, 1344597.434799999],
    [1987678.5560000017, 1344595.7857000008],
    [1987672.206100002, 1344597.6108000018],
    [1987667.6042999998, 1344602.3370999992],
    [1987659.8105000034, 1344602.6125000007],
    [1987654.0829000026, 1344606.6673000008],
    [1987650.465400003, 1344606.5328000002],
    [1987645.6543999985, 1344606.7027999982],
    [1987640.6583999991, 1344608.4530999996],
    [1987635.4588999972, 1344611.2595999986],
    [1987631.8968999982, 1344612.6970000006],
    [1987628.8900000006, 1344616.2129000016],
    [1987626.262500003, 1344616.8304000013],
    [1987621.738300003, 1344618.3016000018],
    [1987616.288999997, 1344620.8548000008],
    [1987613.7541000023, 1344624.0918000005],
    [1987612.902900003, 1344627.2692999989],
    [1987612.329400003, 1344631.4860999994],
    [1987612.0335000008, 1344636.7423],
    [1987612.4962000027, 1344643.0207999982],
    [1987611.5063999966, 1344649.0881999992],
    [1987609.4896000028, 1344653.3561000004],
    [1987607.3061999977, 1344659.7280000001],
    [1987604.8083000034, 1344664.0128000006],
    [1987601.5980999991, 1344668.5852000006],
    [1987599.3869000003, 1344674.1713999994],
    [1987596.4912, 1344680.830699999],
    [1987593.9192999974, 1344683.0199000016],
    [1987591.0604000017, 1344683.9078000002],
    [1987585.7775999978, 1344684.356899999],
    [1987581.1789000034, 1344683.8313999996],
    [1987581.3329000026, 1344685.3531999998],
    [1987588.3458999991, 1344686.1545000002],
    [1987593.628700003, 1344685.7054000013],
    [1987596.4875999987, 1344684.8176000006],
    [1987599.0595000014, 1344682.6284000017],
    [1987601.9552000016, 1344675.9690000005],
    [1987604.1664000005, 1344670.3828999996],
    [1987607.3765999973, 1344665.8104999997],
    [1987609.874499999, 1344661.5256999992],
    [1987612.0578999966, 1344655.1537000015],
    [1987614.074699998, 1344650.8858999982],
    [1987615.0644999966, 1344644.8183999993],
    [1987614.6018000022, 1344638.5399000011],
    [1987614.8977999985, 1344633.2837999985],
    [1987615.4712999985, 1344629.0669],
    [1987616.3224000037, 1344625.8894000016],
    [1987618.8572999984, 1344622.6523999982],
    [1987624.3066999987, 1344620.0993000008],
    [1987628.8307999969, 1344618.6281000003],
    [1987631.4584000036, 1344618.0106000006],
    [1987634.4651999995, 1344614.4946999997],
    [1987638.0271999985, 1344613.0573000014],
    [1987643.2267000005, 1344610.2507000007],
    [1987648.2228000015, 1344608.500500001],
    [1987653.0337999985, 1344608.3304999992],
    [1987656.6512999982, 1344608.4649999999],
    [1987662.3787999973, 1344604.4101999998],
    [1987670.172600001, 1344604.1347999983],
    [1987674.7744000033, 1344599.4085000008],
    [1987681.6413000003, 1344597.434799999]])
 # Ejemplo de puntos

# Agregar un peque√±o ruido a los puntos
puntos_con_ruido = add_noise(puntos)
print(puntos_con_ruido)

# Crear el diagrama de Voronoi con los puntos con ruido
vor = Voronoi(puntos_con_ruido)
# Plotear el diagrama de Voronoi
import matplotlib.pyplot as plt
voronoi_plot_2d(vor)
plt.plot(puntos_con_ruido[:, 0], puntos_con_ruido[:, 1], 'ro',"POLYGON")
plt.show()

# Convertir los segmentos de Voronoi a LineString y crear un GeoDataFrame
lineas_voronoi = [LineString(vor.vertices[line]) for line in vor.ridge_vertices if -1 not in line]
gdf_voronoi = gpd.GeoDataFrame(geometry=lineas_voronoi)

# Guardar el resultado en un archivo shapefile
gdf_voronoi.to_file("DatosSalida/lineas_voronoi.shp")
